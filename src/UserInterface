package application;

import java.util.ArrayList;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.control.Button;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.FlowPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.TilePane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import javafx.stage.Window;

public class KasutajaLiides extends Application {
	
	static ArrayList<TextField> textList = new ArrayList<TextField>();
	static ArrayList<ArrayList<Double>> list = new ArrayList<ArrayList<Double>>();
	static ArrayList<Double> listSisemine = new ArrayList<Double>();
	static int index;

	public void start(Stage primaryStage) {
		try {
			BorderPane root = new BorderPane();
			
			TilePane tile = new TilePane();
			tile.setVgap(0);
			tile.setHgap(-1);
			tile.setPadding(new Insets(5, 0, 5, 0)); 
			
			TextField tekst = new TextField();
			Scene scene = new Scene(root,400,400);
			
			ObservableList<String> pointers = FXCollections.observableArrayList("1x1","2x2", "3x3", "4x4" , "5x5", "6x6", "7x7", "8x8", "9x9","10x10","suurem");
			 final ChoiceBox<String> cb = new ChoiceBox<String>();
					cb.setItems(pointers);
					
				
			 cb.getSelectionModel().selectedItemProperty().addListener(new ChangeListener<String>() {

				@Override
				public void changed(ObservableValue<? extends String> observable,
						String oldValue, String newValue) {
					        try {
					        	Button nupp = new Button("Arvuta determinant");
					        	int value = pointers.indexOf(newValue) + 1;
					        	for (int i = 0; i < value; i++) {
					        		for (int s = 0; s < value; s++) {
					        		VBox vb = new VBox();  //ü , p , a , v                    - ü ehk kaugus ülevalt, p ehk kaugus paremalt, a ehk kaugus alt , v ehk kaugus vasakult
					        		vb.setPadding(new Insets(10, 5, 0, 10));
					        		vb.setSpacing(10); // objektide vaheline kaugus
					        		TextField text = new TextField();
					        		text.setPrefWidth(45);
					        		vb.getChildren().add(text);
					        		tile.getChildren().add(vb);
					        		text.textProperty().addListener(new ChangeListener<String>() {
					        			
					        		public void changed(ObservableValue<? extends String> observable2,
				                            String oldValue2, String newValue2)  {
					        			
					        			text.setOnKeyPressed(new EventHandler<KeyEvent>() {
					        				        @Override
					        				        public void handle(KeyEvent ke)
					        				        {
					        				            if (ke.getCode().equals(KeyCode.ENTER))
					        				            {
					        				            	listSisemine.add(Double.parseDouble(newValue2));
					        				            	
					        				            }
					        				        }
					        				    });
					        			     

					        				}
					        		});
					   
					        	}
					        	}
					        		 
					        	 nupp.setOnAction(new EventHandler<ActionEvent>() {
					                 @Override public void handle(ActionEvent e) {
					                	 System.out.println(newList(listSisemine));
					                	 list = newList(listSisemine);
					                	 System.out.println(new Determinant(new KasutajaLiides().newList(listSisemine)).calculate_det()); // Arvutab det, väljastab ekraanile
					                     
					                 }
					             });
					        	
					        	nupp.setPrefWidth(45);
					        	tile.getChildren().add(nupp);
	 				            Stage stage = new Stage();
					            stage.setTitle("kden");
					            stage.setScene(new Scene(tile, value*60, value*45));
					            stage.show();
					            
					            Window window = scene.getWindow();
					            //hide this current window (if this is what you want
					            window.hide();
					            	
					        } catch (Exception e) {
					            e.printStackTrace();
					        }
				}
			 	});

				 
			 
			 root.setCenter(cb);
			 
			 
			
			primaryStage.setScene(scene);
			primaryStage.show();
			
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public ArrayList<ArrayList<Double>> newList(ArrayList<Double> badList) {
		
		ArrayList<Double> elemendid = new ArrayList<Double>();
    	for (int r = 0; r < badList.size(); r++) {
    		
    		 if (r%((int)Math.sqrt(badList.size())) != 0) {
    			elemendid.add(badList.get(r));
    			if (r == badList.size() - 1) {
    				list.add(elemendid);
    			}
    		 }
    		 else {
    			 if (r == 0) {
    				 elemendid.add(badList.get(r));
    			 }
    			 else {
    				list.add(elemendid);
	    			elemendid = new ArrayList<Double>();
	    			elemendid.add(badList.get(r));
    			 }
    		 }
    	 }
    	
    	return list;
    	
	}
	
	public static void main(String[] args) {
		launch(args);
			
		 //System.out.println(new Determinant(new KasutajaLiides().newList(listSisemine)).calculate_det()); // Arvutab det, väljastab ekraanile
		 //Determinant a = new Determinant(new KasutajaLiides().newList(listSisemine));
		 //System.out.println(a.calculate_det());
	}
	

}
